import { FontEncoding, FontSubType, PortableDocumentFont, PortableDocumentFontFamily } from '@/oxyplot'

/**
 * Defines the standard fonts that can be used in a PortableDocument.
 */
export class StandardFonts {
  /**
   * Gets the Arial font family.
   */
  static get Helvetica(): PortableDocumentFontFamily {
    return getHelvetica()
  }

  /**
   * Gets the Times font family.
   */
  static get Times(): PortableDocumentFontFamily {
    return getTimes()
  }

  /**
   * Gets the Courier font family.
   */
  static get Courier(): PortableDocumentFontFamily {
    return getCourier()
  }
}

let helvetica: PortableDocumentFontFamily | undefined = undefined

function getHelvetica() {
  if (helvetica) return helvetica

  const arialRegular = new PortableDocumentFont({
    ascent: 905,
    capHeight: 716,
    descent: -212,
    flags: 32,
    fontBoundingBox: [-665, -325, 2046, 1040],
    italicAngle: 0,
    stemV: 0,
    xHeight: 519,
    subType: FontSubType.TrueType,
    fontName: 'Arial',
    baseFont: 'Arial',
    encoding: FontEncoding.WinAnsiEncoding,
    firstChar: 0,
    widths: [
      750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750,
      750, 750, 750, 750, 750, 750, 750, 750, 750, 277, 277, 354, 556, 556, 889, 666, 190, 333, 333, 389, 583, 277, 333,
      277, 277, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 277, 277, 583, 583, 583, 556, 1015, 666, 666, 722,
      722, 666, 610, 777, 722, 277, 500, 666, 556, 833, 722, 777, 666, 777, 722, 666, 610, 722, 666, 943, 666, 666, 610,
      277, 277, 277, 469, 556, 333, 556, 556, 500, 556, 556, 277, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556, 556,
      333, 500, 277, 556, 500, 722, 500, 500, 500, 333, 259, 333, 583, 750, 556, 750, 222, 556, 333, 1000, 556, 556,
      333, 1000, 666, 333, 1000, 750, 610, 750, 750, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 943, 750,
      500, 666, 277, 333, 556, 556, 556, 556, 259, 556, 333, 736, 370, 556, 583, 333, 736, 552, 399, 548, 333, 333, 333,
      576, 537, 333, 333, 333, 365, 556, 833, 833, 833, 610, 666, 666, 666, 666, 666, 666, 1000, 722, 666, 666, 666,
      666, 277, 277, 277, 277, 722, 722, 777, 777, 777, 777, 777, 583, 777, 722, 722, 722, 722, 666, 666, 610, 556, 556,
      556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 277, 277, 277, 277, 556, 556, 556, 556, 556, 556, 556, 548, 610,
      556, 556, 556, 556, 500, 556, 500,
    ],
  })
  const arialItalic = new PortableDocumentFont({
    ascent: 905,
    capHeight: 716,
    descent: -212,
    flags: 32,
    fontBoundingBox: [-517, -325, 1359, 998],
    italicAngle: -12,
    stemV: 0,
    xHeight: 519,
    subType: FontSubType.TrueType,
    fontName: 'Arial,Italic',
    baseFont: 'Arial,Italic',
    encoding: FontEncoding.WinAnsiEncoding,
    firstChar: 0,
    widths: [
      750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750,
      750, 750, 750, 750, 750, 750, 750, 750, 750, 277, 277, 354, 556, 556, 889, 666, 190, 333, 333, 389, 583, 277, 333,
      277, 277, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 277, 277, 583, 583, 583, 556, 1015, 666, 666, 722,
      722, 666, 610, 777, 722, 277, 500, 666, 556, 833, 722, 777, 666, 777, 722, 666, 610, 722, 666, 943, 666, 666, 610,
      277, 277, 277, 469, 556, 333, 556, 556, 500, 556, 556, 277, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556, 556,
      333, 500, 277, 556, 500, 722, 500, 500, 500, 333, 259, 333, 583, 750, 556, 750, 222, 556, 333, 1000, 556, 556,
      333, 1000, 666, 333, 1000, 750, 610, 750, 750, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 943, 750,
      500, 666, 277, 333, 556, 556, 556, 556, 259, 556, 333, 736, 370, 556, 583, 333, 736, 552, 399, 548, 333, 333, 333,
      576, 537, 333, 333, 333, 365, 556, 833, 833, 833, 610, 666, 666, 666, 666, 666, 666, 1000, 722, 666, 666, 666,
      666, 277, 277, 277, 277, 722, 722, 777, 777, 777, 777, 777, 583, 777, 722, 722, 722, 722, 666, 666, 610, 556, 556,
      556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 277, 277, 277, 277, 556, 556, 556, 556, 556, 556, 556, 548, 610,
      556, 556, 556, 556, 500, 556, 500,
    ],
  })
  const arialBold = new PortableDocumentFont({
    ascent: 905,
    capHeight: 716,
    descent: -212,
    flags: 32,
    fontBoundingBox: [-628, -376, 2000, 1056],
    italicAngle: 0,
    stemV: 0,
    xHeight: 519,
    subType: FontSubType.TrueType,
    fontName: 'Arial,Bold',
    baseFont: 'Arial,Bold',
    encoding: FontEncoding.WinAnsiEncoding,
    firstChar: 0,
    widths: [
      750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750,
      750, 750, 750, 750, 750, 750, 750, 750, 750, 277, 333, 474, 556, 556, 889, 722, 237, 333, 333, 389, 583, 277, 333,
      277, 277, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 583, 583, 583, 610, 975, 722, 722, 722, 722,
      666, 610, 777, 722, 277, 556, 722, 610, 833, 722, 777, 666, 777, 722, 666, 610, 722, 666, 943, 666, 666, 610, 333,
      277, 333, 583, 556, 333, 556, 610, 556, 610, 556, 333, 610, 610, 277, 277, 556, 277, 889, 610, 610, 610, 610, 389,
      556, 333, 610, 556, 777, 556, 556, 500, 389, 279, 389, 583, 750, 556, 750, 277, 556, 500, 1000, 556, 556, 333,
      1000, 666, 333, 1000, 750, 610, 750, 750, 277, 277, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 943, 750, 500,
      666, 277, 333, 556, 556, 556, 556, 279, 556, 333, 736, 370, 556, 583, 333, 736, 552, 399, 548, 333, 333, 333, 576,
      556, 333, 333, 333, 365, 556, 833, 833, 833, 610, 722, 722, 722, 722, 722, 722, 1000, 722, 666, 666, 666, 666,
      277, 277, 277, 277, 722, 722, 777, 777, 777, 777, 777, 583, 777, 722, 722, 722, 722, 666, 666, 610, 556, 556, 556,
      556, 556, 556, 889, 556, 556, 556, 556, 556, 277, 277, 277, 277, 610, 610, 610, 610, 610, 610, 610, 548, 610, 610,
      610, 610, 610, 556, 610, 556,
    ],
  })

  const arialBoldItalic = new PortableDocumentFont({
    ascent: 905,
    capHeight: 716,
    descent: -212,
    flags: 32,
    fontBoundingBox: [-560, -376, 1390, 1018],
    italicAngle: 0,
    stemV: 0,
    xHeight: 519,
    subType: FontSubType.TrueType,
    fontName: 'Arial,BoldItalic',
    baseFont: 'Arial,BoldItalic',
    encoding: FontEncoding.WinAnsiEncoding,
    firstChar: 0,
    widths: [
      750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750,
      750, 750, 750, 750, 750, 750, 750, 750, 750, 277, 333, 474, 556, 556, 889, 722, 237, 333, 333, 389, 583, 277, 333,
      277, 277, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 583, 583, 583, 610, 975, 722, 722, 722, 722,
      666, 610, 777, 722, 277, 556, 722, 610, 833, 722, 777, 666, 777, 722, 666, 610, 722, 666, 943, 666, 666, 610, 333,
      277, 333, 583, 556, 333, 556, 610, 556, 610, 556, 333, 610, 610, 277, 277, 556, 277, 889, 610, 610, 610, 610, 389,
      556, 333, 610, 556, 777, 556, 556, 500, 389, 279, 389, 583, 750, 556, 750, 277, 556, 500, 1000, 556, 556, 333,
      1000, 666, 333, 1000, 750, 610, 750, 750, 277, 277, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 943, 750, 500,
      666, 277, 333, 556, 556, 556, 556, 279, 556, 333, 736, 370, 556, 583, 333, 736, 552, 399, 548, 333, 333, 333, 576,
      556, 333, 333, 333, 365, 556, 833, 833, 833, 610, 722, 722, 722, 722, 722, 722, 1000, 722, 666, 666, 666, 666,
      277, 277, 277, 277, 722, 722, 777, 777, 777, 777, 777, 583, 777, 722, 722, 722, 722, 666, 666, 610, 556, 556, 556,
      556, 556, 556, 889, 556, 556, 556, 556, 556, 277, 277, 277, 277, 610, 610, 610, 610, 610, 610, 610, 548, 610, 610,
      610, 610, 610, 556, 610, 556,
    ],
  })

  helvetica = new PortableDocumentFontFamily({
    regularFont: arialRegular,
    boldFont: arialBold,
    italicFont: arialItalic,
    boldItalicFont: arialBoldItalic,
  })

  return helvetica
}

let times: PortableDocumentFontFamily | undefined = undefined

function getTimes() {
  if (times) return times

  const timesRegular = new PortableDocumentFont({
    ascent: 891,
    capHeight: 662,
    descent: -216,
    flags: 32,
    fontBoundingBox: [-568, -307, 2046, 1040],
    italicAngle: 0,
    stemV: 0,
    xHeight: 447,
    subType: FontSubType.TrueType,
    fontName: 'TimesNewRoman',
    baseFont: 'TimesNewRoman',
    encoding: FontEncoding.WinAnsiEncoding,
    firstChar: 0,
    widths: [
      777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777,
      777, 777, 777, 777, 777, 777, 777, 777, 777, 250, 333, 408, 500, 500, 833, 777, 180, 333, 333, 500, 563, 250, 333,
      250, 277, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 277, 277, 563, 563, 563, 443, 920, 722, 666, 666, 722,
      610, 556, 722, 722, 333, 389, 722, 610, 889, 722, 722, 556, 722, 666, 556, 610, 722, 722, 943, 722, 722, 610, 333,
      277, 333, 469, 500, 333, 443, 500, 443, 500, 443, 333, 500, 500, 277, 277, 500, 277, 777, 500, 500, 500, 500, 333,
      389, 277, 500, 500, 722, 500, 500, 443, 479, 200, 479, 541, 777, 500, 777, 333, 500, 443, 1000, 500, 500, 333,
      1000, 556, 333, 889, 777, 610, 777, 777, 333, 333, 443, 443, 350, 500, 1000, 333, 979, 389, 333, 722, 777, 443,
      722, 250, 333, 500, 500, 500, 500, 200, 500, 333, 759, 275, 500, 563, 333, 759, 500, 399, 548, 299, 299, 333, 576,
      453, 333, 333, 299, 310, 500, 750, 750, 750, 443, 722, 722, 722, 722, 722, 722, 889, 666, 610, 610, 610, 610, 333,
      333, 333, 333, 722, 722, 722, 722, 722, 722, 722, 563, 722, 722, 722, 722, 722, 722, 556, 500, 443, 443, 443, 443,
      443, 443, 666, 443, 443, 443, 443, 443, 277, 277, 277, 277, 500, 500, 500, 500, 500, 500, 500, 548, 500, 500, 500,
      500, 500, 500, 500, 500,
    ],
  })

  const timesItalic = new PortableDocumentFont({
    ascent: 891,
    capHeight: 662,
    descent: -216,
    flags: 32,
    fontBoundingBox: [-498, -307, 1333, 1023],
    italicAngle: -12,
    stemV: 0,
    xHeight: 430,
    subType: FontSubType.TrueType,
    fontName: 'TimesNewRoman,Italic',
    baseFont: 'TimesNewRoman,Italic',
    encoding: FontEncoding.WinAnsiEncoding,
    firstChar: 0,
    widths: [
      777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777,
      777, 777, 777, 777, 777, 777, 777, 777, 777, 250, 333, 419, 500, 500, 833, 777, 213, 333, 333, 500, 674, 250, 333,
      250, 277, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 674, 674, 674, 500, 919, 610, 610, 666, 722,
      610, 610, 722, 722, 333, 443, 666, 556, 833, 666, 722, 610, 722, 610, 500, 556, 722, 610, 833, 610, 556, 556, 389,
      277, 389, 421, 500, 333, 500, 500, 443, 500, 443, 277, 500, 500, 277, 277, 443, 277, 722, 500, 500, 500, 500, 389,
      389, 277, 500, 443, 666, 443, 443, 389, 399, 274, 399, 541, 777, 500, 777, 333, 500, 556, 889, 500, 500, 333,
      1000, 500, 333, 943, 777, 556, 777, 777, 333, 333, 556, 556, 350, 500, 889, 333, 979, 389, 333, 666, 777, 389,
      556, 250, 389, 500, 500, 500, 500, 274, 500, 333, 759, 275, 500, 674, 333, 759, 500, 399, 548, 299, 299, 333, 576,
      522, 250, 333, 299, 310, 500, 750, 750, 750, 500, 610, 610, 610, 610, 610, 610, 889, 666, 610, 610, 610, 610, 333,
      333, 333, 333, 722, 666, 722, 722, 722, 722, 722, 674, 722, 722, 722, 722, 722, 556, 610, 500, 500, 500, 500, 500,
      500, 500, 666, 443, 443, 443, 443, 443, 277, 277, 277, 277, 500, 500, 500, 500, 500, 500, 500, 548, 500, 500, 500,
      500, 500, 443, 500, 443,
    ],
  })

  const timesBold = new PortableDocumentFont({
    ascent: 891,
    capHeight: 662,
    descent: -216,
    flags: 32,
    fontBoundingBox: [-558, -328, 2000, 1056],
    italicAngle: 0,
    stemV: 0,
    xHeight: 457,
    subType: FontSubType.TrueType,
    fontName: 'TimesNewRoman,Bold',
    baseFont: 'TimesNewRoman,Bold',
    encoding: FontEncoding.WinAnsiEncoding,
    firstChar: 0,
    widths: [
      777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777,
      777, 777, 777, 777, 777, 777, 777, 777, 777, 250, 333, 555, 500, 500, 1000, 833, 277, 333, 333, 500, 569, 250,
      333, 250, 277, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 569, 569, 569, 500, 930, 722, 666, 722,
      722, 666, 610, 777, 777, 389, 500, 777, 666, 943, 722, 777, 610, 777, 722, 556, 666, 722, 722, 1000, 722, 722,
      666, 333, 277, 333, 581, 500, 333, 500, 556, 443, 556, 443, 333, 500, 556, 277, 333, 556, 277, 833, 556, 500, 556,
      556, 443, 389, 333, 556, 500, 722, 500, 500, 443, 394, 220, 394, 520, 777, 500, 777, 333, 500, 500, 1000, 500,
      500, 333, 1000, 556, 333, 1000, 777, 666, 777, 777, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722,
      777, 443, 722, 250, 333, 500, 500, 500, 500, 220, 500, 333, 747, 299, 500, 569, 333, 747, 500, 399, 548, 299, 299,
      333, 576, 540, 333, 333, 299, 330, 500, 750, 750, 750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 666, 666,
      666, 666, 389, 389, 389, 389, 722, 722, 777, 777, 777, 777, 777, 569, 777, 722, 722, 722, 722, 722, 610, 556, 500,
      500, 500, 500, 500, 500, 722, 443, 443, 443, 443, 443, 277, 277, 277, 277, 500, 556, 500, 500, 500, 500, 500, 548,
      500, 556, 556, 556, 556, 500, 556, 500,
    ],
  })

  const timesBoldItalic = new PortableDocumentFont({
    ascent: 891,
    capHeight: 662,
    descent: -216,
    flags: 32,
    fontBoundingBox: [-547, -307, 1401, 1032],
    italicAngle: 0,
    stemV: 0,
    xHeight: 439,
    subType: FontSubType.TrueType,
    fontName: 'TimesNewRoman,BoldItalic',
    baseFont: 'TimesNewRoman,BoldItalic',
    encoding: FontEncoding.WinAnsiEncoding,
    firstChar: 0,
    widths: [
      777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777, 777,
      777, 777, 777, 777, 777, 777, 777, 777, 777, 250, 389, 555, 500, 500, 833, 777, 277, 333, 333, 500, 569, 250, 333,
      250, 277, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 569, 569, 569, 500, 832, 666, 666, 666, 722,
      666, 666, 722, 777, 389, 500, 666, 610, 889, 722, 722, 610, 722, 666, 556, 610, 722, 666, 889, 666, 610, 610, 333,
      277, 333, 569, 500, 333, 500, 500, 443, 500, 443, 333, 500, 556, 277, 277, 500, 277, 777, 556, 500, 500, 500, 389,
      389, 277, 556, 443, 666, 500, 443, 389, 348, 220, 348, 569, 777, 500, 777, 333, 500, 500, 1000, 500, 500, 333,
      1000, 556, 333, 943, 777, 610, 777, 777, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 777, 389,
      610, 250, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 605, 333, 747, 500, 399, 548, 299, 299, 333, 576,
      500, 250, 333, 299, 299, 500, 750, 750, 750, 500, 666, 666, 666, 666, 666, 666, 943, 666, 666, 666, 666, 666, 389,
      389, 389, 389, 722, 722, 722, 722, 722, 722, 722, 569, 722, 722, 722, 722, 722, 610, 610, 500, 500, 500, 500, 500,
      500, 500, 722, 443, 443, 443, 443, 443, 277, 277, 277, 277, 500, 556, 500, 500, 500, 500, 500, 548, 500, 556, 556,
      556, 556, 443, 500, 443,
    ],
  })

  times = new PortableDocumentFontFamily({
    regularFont: timesRegular,
    boldFont: timesBold,
    italicFont: timesItalic,
    boldItalicFont: timesBoldItalic,
  })
  return times
}

let courier: PortableDocumentFontFamily | undefined = undefined

function getCourier() {
  if (courier) return courier

  const courierWidths = [
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
    600, 600, 600,
  ]
  const courierRegular = new PortableDocumentFont({
    ascent: 833,
    capHeight: 571,
    descent: -300,
    flags: 32,
    fontBoundingBox: [-122, -680, 623, 1021],
    italicAngle: 0,
    stemV: 0,
    xHeight: 423,
    subType: FontSubType.TrueType,
    fontName: 'Courier',
    baseFont: 'Courier',
    encoding: FontEncoding.WinAnsiEncoding,
    firstChar: 0,
    widths: courierWidths,
  })

  const courierItalic = new PortableDocumentFont({
    ascent: 833,
    capHeight: 571,
    descent: -300,
    flags: 32,
    fontBoundingBox: [-67, -274, 800, 1000],
    italicAngle: -12,
    stemV: 0,
    xHeight: 423,
    subType: FontSubType.TrueType,
    fontName: 'Courier,Italic',
    baseFont: 'Courier,Italic',
    encoding: FontEncoding.WinAnsiEncoding,
    firstChar: 0,
    widths: courierWidths,
  })

  const courierBold = new PortableDocumentFont({
    ascent: 833,
    capHeight: 592,
    descent: -300,
    flags: 32,
    fontBoundingBox: [-192, -710, 702, 1221],
    italicAngle: 0,
    stemV: 0,
    xHeight: 443,
    subType: FontSubType.TrueType,
    fontName: 'Courier,Bold',
    baseFont: 'Courier,Bold',
    encoding: FontEncoding.WinAnsiEncoding,
    firstChar: 0,
    widths: courierWidths,
  })

  const courierBoldItalic = new PortableDocumentFont({
    ascent: 833,
    capHeight: 592,
    descent: -300,
    flags: 32,
    fontBoundingBox: [-103, -377, 839, 1004],
    italicAngle: 0,
    stemV: 0,
    xHeight: 443,
    subType: FontSubType.TrueType,
    fontName: 'Courier,BoldItalic',
    baseFont: 'Courier,BoldItalic',
    encoding: FontEncoding.WinAnsiEncoding,
    firstChar: 0,
    widths: courierWidths,
  })

  courier = new PortableDocumentFontFamily({
    regularFont: courierRegular,
    boldFont: courierBold,
    italicFont: courierItalic,
    boldItalicFont: courierBoldItalic,
  })
  return courier
}
